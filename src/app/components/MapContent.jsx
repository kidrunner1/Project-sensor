"use client";
import React, { useState, useRef, useMemo, useCallback } from "react";
import { MapContainer, TileLayer, Marker, Popup, DivIcon } from "react-leaflet";
import L from "leaflet";
import "leaflet/dist/leaflet.css";
import { FaMapMarkerAlt } from "react-icons/fa"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ FontAwesome
import "@fortawesome/fontawesome-free/css/all.min.css";


// ‚úÖ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø)
const center = {
  lat: 13.736717,
  lng: 100.523186,
};

// ‚úÖ ‡πÉ‡∏ä‡πâ DivIcon ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö FontAwesome
const createFontAwesomeIcon = (color = "red") => {
  return L.divIcon({
    html: `<div style="
      font-size: 30px; 
      color: ${color};
      text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
      ">
      <i class="fas fa-map-marker-alt"></i>
    </div>`,
    className: "custom-marker-icon",
    iconSize: [30, 30],
    iconAnchor: [15, 30],
    popupAnchor: [0, -30],
  });
};

const DraggableMarker = () => {
  const [draggable, setDraggable] = useState(false);
  const [position, setPosition] = useState(center);
  const markerRef = useRef(null);

  // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏•‡∏≤‡∏Å (Drag)
  const eventHandlers = useMemo(
    () => ({
      dragend() {
        const marker = markerRef.current;
        if (marker != null) {
          setPosition(marker.getLatLng()); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏≤‡∏Å
        }
      },
    }),
    []
  );

  // ‚úÖ ‡∏õ‡∏¥‡∏î/‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å
  const toggleDraggable = useCallback(() => {
    setDraggable((d) => !d);
  }, []);

  return (
    <Marker
      draggable={draggable}
      eventHandlers={eventHandlers}
      position={position}
      ref={markerRef}
      icon={createFontAwesomeIcon()} // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô FontAwesome ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á
    >
      <Popup minWidth={90}>
        <span onClick={toggleDraggable} className="cursor-pointer text-blue-600 font-semibold">
          {draggable
            ? "üìç ‡∏•‡∏≤‡∏Å Marker ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!"
            : "üñ±Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏•‡∏≤‡∏Å Marker"}
        </span>
        <br />
        <small className="text-gray-500">
          ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: <br />
          üåç Lat: {position.lat.toFixed(6)} <br />
          üìç Lng: {position.lng.toFixed(6)}
        </small>
      </Popup>
    </Marker>
  );
};

export default function MapWithDraggableMarker() {
  return (
    <div className="h-[500px] w-full">
      <MapContainer center={center} zoom={13} scrollWheelZoom={true} className="h-full w-full">
        {/* ‚úÖ Tile Layer (Google Maps ‡∏´‡∏£‡∏∑‡∏≠ OpenStreetMap) */}
        <TileLayer
          attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />

        {/* ‚úÖ Marker ‡πÅ‡∏ö‡∏ö‡∏•‡∏≤‡∏Å‡πÑ‡∏î‡πâ */}
        <DraggableMarker />
      </MapContainer>
    </div>
  );
}
