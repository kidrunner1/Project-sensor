"use client";

import React, { useState, useEffect } from "react";
import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine } from "recharts";

// ‚úÖ ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏≠‡πÇ‡∏ã‡∏ô (O‚ÇÉ) ‡πÉ‡∏ô ppb
const SAFE_LIMIT = 100; // ‡∏Ñ‡πà‡∏≤ O‚ÇÉ ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (ppb)
const DANGER_LIMIT = 150; // ‡∏Ñ‡πà‡∏≤ O‚ÇÉ ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ (ppb)

// ‚úÖ Mock Data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const initialMockData = [
  { time: "00:00", o3: 50 },
  { time: "02:00", o3: 70 },
  { time: "04:00", o3: 90 },
  { time: "06:00", o3: 110 }, // üö® ‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á
  { time: "08:00", o3: 130 }, // üö® ‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á
  { time: "10:00", o3: 120 },
  { time: "12:00", o3: 100 },
  { time: "14:00", o3: 80 },
  { time: "16:00", o3: 60 },
  { time: "18:00", o3: 50 },
  { time: "20:00", o3: 40 },
  { time: "22:00", o3: 30 },
];

// ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤ O‚ÇÉ ‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Realtime)
const generateO3Data = () => ({
  time: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),
  o3: Math.floor(Math.random() * 180), // ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0 - 180 ppb
});

const LargeScaleAreaChartOzone = () => {
  const [chartData, setChartData] = useState(initialMockData);

  // ‚úÖ ‡πÉ‡∏ä‡πâ useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  useEffect(() => {
    const interval = setInterval(() => {
      setChartData((prevData) => {
        const newData = [...prevData, generateO3Data()];

        // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô localStorage
        localStorage.setItem("ozone_data", JSON.stringify(newData));
        return newData.length > 50 ? newData.slice(1) : newData; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 50 ‡∏à‡∏∏‡∏î
      });
    }, 5000);

    return () => clearInterval(interval); // ‡∏•‡πâ‡∏≤‡∏á interval ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å unmount
  }, []);

  return (
    <div className="transition-all duration-500">
      {/* ‚úÖ Header */}
      <div className="flex justify-between items-center mb-4">
        <h1 className="text-lg font-semibold text-gray-800 dark:text-white">üåç ‡∏Ñ‡πà‡∏≤‡∏°‡∏•‡∏û‡∏¥‡∏©‡πÇ‡∏≠‡πÇ‡∏ã‡∏ô (O‚ÇÉ) - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå</h1>
        <span className="text-sm text-gray-500 dark:text-gray-400">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ</span>
      </div>

      {/* ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü Area Chart */}
      <ResponsiveContainer width="100%" height={500}>
        <AreaChart data={chartData}>
          <defs>
            {/* ‚úÖ Gradient ‡∏™‡∏µ‡πÉ‡∏´‡πâ Area Chart ‡∏î‡∏π‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ */}
            <linearGradient id="colorO3" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="#4F46E5" stopOpacity={0.8} />
              <stop offset="95%" stopColor="#4F46E5" stopOpacity={0} />
            </linearGradient>
            <linearGradient id="colorDanger" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="#EF4444" stopOpacity={0.8} />
              <stop offset="95%" stopColor="#EF4444" stopOpacity={0} />
            </linearGradient>
          </defs>

          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="time" tick={{ fill: "#aaa" }} />
          <YAxis label={{ value: "ppb", angle: -90, position: "insideLeft", fill: "#aaa" }} domain={[0, 200]} />
          <Tooltip contentStyle={{ backgroundColor: "#333", color: "#fff", borderRadius: "5px" }} />

          {/* ‚úÖ ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô */}
          <ReferenceLine y={SAFE_LIMIT} stroke="yellow" strokeDasharray="3 3" label="‚ö†Ô∏è ‡∏Ñ‡πà‡∏≤‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á" />
          <ReferenceLine y={DANGER_LIMIT} stroke="red" strokeDasharray="3 3" label="üö® ‡∏Ñ‡πà‡∏≤‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢" />

          {/* ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏™‡πâ‡∏ô O‚ÇÉ */}
          <Area type="monotone" dataKey="o3" stroke="#4F46E5" fill="url(#colorO3)" fillOpacity={1} />

          {/* ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤ O‚ÇÉ ‡πÄ‡∏Å‡∏¥‡∏ô 150 ppb ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÅ‡∏î‡∏á */}
          {chartData.some((d) => d.o3 > DANGER_LIMIT) && (
            <Area type="monotone" dataKey="o3" stroke="#EF4444" fill="url(#colorDanger)" fillOpacity={1} />
          )}
        </AreaChart>
      </ResponsiveContainer>

      {/* ‚úÖ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
      <div className="mt-4 text-center text-sm text-gray-600 dark:text-gray-300">
        <p>üìå ‡∏´‡∏≤‡∏Å‡∏Ñ‡πà‡∏≤ O‚ÇÉ ‡πÄ‡∏Å‡∏¥‡∏ô 150 ppb ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á</p>
      </div>
    </div>
  );
};

export default LargeScaleAreaChartOzone;
