import axios from "axios";
import ipconfig from "@/app/ipconfig";

// ‚úÖ URL API
const FORGET_PASSWORD_API = `http://${ipconfig.API_HOST}/api/auth/forget-password`;
const VERIFY_OTP_API = `http://${ipconfig.API_HOST}/api/auth/verify-otp-forget-password`;
const RESET_PASSWORD_API = `http://${ipconfig.API_HOST}/api/auth/reset-password-forget-password`;

/**
 * üîπ 1. ‡∏Ç‡∏≠ OTP ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
 * @param {string} email
 * @returns {Promise<Object>} API Response
 */
export async function requestForgetPassword(email) {
    try {
        const response = await axios.post(FORGET_PASSWORD_API, { email });
        console.log("‚úÖ OTP Request Response:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå Request Forget Password Error:", error.response?.data || error.message);
        throw new Error(error.response?.data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠ OTP ‡πÑ‡∏î‡πâ");
    }
}

/**
 * üîπ 2. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Local Storage
 * @param {string} userId
 * @param {string} otp
 * @returns {Promise<Object>} API Response
 */
export async function verifyForgetOtp(userId, otp) {
    try {
        const response = await axios.post(VERIFY_OTP_API, {
            user_id: userId,
            otp
        });

        console.log("‚úÖ Verify OTP Response:", response.data);

        // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å `user_id` ‡πÅ‡∏•‡∏∞ `otp` ‡∏•‡∏á Local Storage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Reset Password
        localStorage.setItem("forgot_user_id", response.data.user_id);
        localStorage.setItem("forgot_otp", otp);

        return response.data;
    } catch (error) {
        console.error("‚ùå Verify OTP Error:", error.response?.data || error.message);
        throw new Error(error.response?.data?.message || "OTP ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    }
}


/**
 * üîπ 3. ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
 * @param {string} newPassword
 * @returns {Promise<Object>} API Response
 */
export async function resetForgetPassword(newPassword) {
    const userId = localStorage.getItem("forgot_user_id");
    const otp = localStorage.getItem("forgot_otp");

    if (!userId || !otp) {
        throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• `user_id` ‡∏´‡∏£‡∏∑‡∏≠ `otp` ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ç‡∏≠ OTP ‡πÉ‡∏´‡∏°‡πà");
    }

    try {
        const response = await axios.post(RESET_PASSWORD_API, {
            user_id: userId,
            otp: otp,
            new_password: newPassword
        });

        console.log("‚úÖ Reset Password Response:", response.data);

        // ‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• `user_id` ‡πÅ‡∏•‡∏∞ `otp` ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Local Storage ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        localStorage.removeItem("forgot_user_id");
        localStorage.removeItem("forgot_otp");

        return response.data;
    } catch (error) {
        console.error("‚ùå Reset Password Error:", error.response?.data || error.message);
        throw new Error(error.response?.data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ");
    }
}

