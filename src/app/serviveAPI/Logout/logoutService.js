// // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Logout ‡πÅ‡∏•‡∏∞ Refresh Token ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
// import axios from "axios";
// import ipconfig from "@/app/ipconfig";
// import Swal from "sweetalert2";

// // ‚úÖ URL API
// const REFRESH_API = `http://${ipconfig.API_HOST}/api/auth/refresh-access-token`;
// const LOGOUT_API = `http://${ipconfig.API_HOST}/api/auth/logout`;

// export async function logoutUser() {
//     let accessToken = localStorage.getItem("access_token");
//     const refreshToken = localStorage.getItem("refresh_token");
//     const userId = localStorage.getItem("user_id");

//     console.log("üîπ `user_id` ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Logout:", userId);
//     console.log("üîπ `access_token` ‡∏Å‡πà‡∏≠‡∏ô Logout:", accessToken);
//     console.log("üîπ `refresh_token` ‡∏Å‡πà‡∏≠‡∏ô Logout:", refreshToken);

//     try {
//         // ‚úÖ 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Access Token ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API `/auth/refresh-access-token`
//         console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Access Token...");

//         let newAccessToken = null; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Access Token ‡πÉ‡∏´‡∏°‡πà
//         const refreshResponse = await axios.post(REFRESH_API, {
//             user_id: userId,
//             access_token: accessToken
//         }, {
//             headers: {
//                 Authorization: `Bearer ${refreshToken}`, // ‚úÖ ‡πÉ‡∏ä‡πâ Refresh Token ‡πÉ‡∏ô Header
//                 "Content-Type": "application/json"
//             }
//         });

//         console.log("üîÑ ‚úÖ Refresh Token Response:", refreshResponse.data);

//         // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà API ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
//         const isExpired = refreshResponse.data.hasOwnProperty("is_expired") ? String(refreshResponse.data.is_expired) : "false";
//         const isRevoked = refreshResponse.data.hasOwnProperty("is_revoked") ? !!refreshResponse.data.is_revoked : false;

//         const NewAC = localStorage.setItem("new_access_token", newAccessToken); // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å new_access_token ‡∏•‡∏á Local Storage

//         console.log("üîπ user_status:", refreshResponse.data.user_status);
//         console.log("üîπ is_expired (boolean):", isExpired);
//         console.log("üîπ is_revoked (boolean):", isRevoked);
//         console.log("üîπ new_access_token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", NewAC);

//         // ‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà 1: ‡∏ñ‡πâ‡∏≤ `user_status = online` ‡πÅ‡∏•‡∏∞ `is_expired = "false"`
//         if (refreshResponse.data.user_status === "online" && isExpired === "false") {
//             console.log("‚úÖ Access Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‚Üí ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥ Logout");
//             accessToken = localStorage.getItem("access_token"); // ‚úÖ ‡πÉ‡∏ä‡πâ Access Token ‡πÄ‡∏î‡∏¥‡∏°
//         }

//         // ‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà 2: ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ `"is_expired": "true", "is_revoked": true` ‚Üí ‡πÉ‡∏ä‡πâ `new_access_token` ‡∏ó‡∏≥ Logout
//         else if (isExpired === "true" && isRevoked && newAccessToken) {
//             // ‚ùå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ new_access_token ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà refresh_token
//             if (newAccessToken === refreshToken) {
//                 console.error("‚ùå new_access_token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô refresh_token ‡∏ã‡∏∂‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!");
//                 // üîπ ‡∏•‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô
//                 localStorage.removeItem("access_token");
//                 localStorage.removeItem("refresh_token");
//                 localStorage.removeItem("user_id");
//                 localStorage.removeItem("access_expires_time");
//                 localStorage.removeItem("refresh_expires_time");
//                 localStorage.removeItem("company_id")
//                 // localStorage.clear();
//                 window.location.href = "/";
//                 return;
//             }

//             // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Access Token ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á Local Storage
//             localStorage.setItem("access_token", newAccessToken);
//             console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï new_access_token ‡πÉ‡∏ô Local Storage:", newAccessToken);

//             // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Local Storage ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
//             accessToken = localStorage.getItem("new_access_token");
//             console.log("üîÑ `access_token` ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:", accessToken);
//         }

//         // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Access Token ‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Login ‡πÉ‡∏´‡∏°‡πà
//         else {
//             console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ Access Token ‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Login ‡πÉ‡∏´‡∏°‡πà");
//             localStorage.removeItem("access_token");
//             localStorage.removeItem("refresh_token");
//             localStorage.removeItem("user_id");
//             localStorage.removeItem("access_expires_time");
//             localStorage.removeItem("refresh_expires_time");
//             localStorage.removeItem("company_id")
//             // localStorage.clear();
//             await Swal.fire({
//                 title: "‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
//                 text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà",
//                 icon: "warning",
//                 confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//             });
//             window.location.href = "/";
//             return;
//         }

//         // ‚úÖ Debug ‡∏Ñ‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å `/auth/logout`
//         console.log("üöÄ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ Logout...");
//         console.log("üîπ `user_id` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:", userId);
//         console.log("üîπ `access_token` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:", accessToken);

//         // ‚úÖ 2. ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ Logout ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Access Token ‡πÉ‡∏´‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
//         try {
//             const logoutResponse = await axios.post(LOGOUT_API, { user_id: userId }, {
//                 headers: {
//                     Authorization: `${accessToken}`,
//                     "Content-Type": "application/json"
//                 }
//             });

//             console.log("‚úÖ Logout API Response:", logoutResponse.data);
//             if (logoutResponse?.data?.status === "logged_out") {
//                 console.log("‚úÖ Debug: logoutResponse.data:", logoutResponse.data);

//                 const logoutMessage = logoutResponse?.data?.message || "‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß";
//                 console.log("‚úÖ Logout Message:", logoutMessage);

//                 await Swal.fire({
//                     title: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
//                     text: logoutMessage,
//                     icon: "success",
//                     confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//                 });

//                 // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå Local Storage
//                 localStorage.removeItem("access_token");
//                 localStorage.removeItem("refresh_token");
//                 localStorage.removeItem("user_id");
//                 localStorage.removeItem("access_expires_time");
//                 localStorage.removeItem("refresh_expires_time");
//                 localStorage.removeItem("company_id");
//                 window.location.href = "/";

//             } else {
//                 throw new Error("‚ùå Logout failed: Unexpected response.");
//             }

//         } catch (logoutError) {
//             console.error("‚ùå Logout API Error:", logoutError);

//             // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
//             let errorMessage = "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ";

//             if (logoutError.response) {
//                 console.log("üîπ logoutError.response:", logoutError.response); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö response
//                 if (logoutError.response.data) {
//                     console.log("üîπ logoutError.response.data:", logoutError.response.data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö data
//                     errorMessage = logoutError.response.data.message || errorMessage;
//                 }
//             } else {
//                 console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ response ‡∏à‡∏≤‡∏Å API ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢");
//                 errorMessage = logoutError.message || errorMessage; // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å axios error
//             }

//             await Swal.fire({
//                 title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//                 text: errorMessage,
//                 icon: "error",
//                 confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//             });
//         }
//     } catch (error) {
//         console.error("‚ùå Error refreshing Access Token:", error.response?.data || error.message);
//         throw error.response?.data || { message: "Failed to refresh Access Token" };
//     }
// }

// // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Logout ‡πÅ‡∏•‡∏∞ Refresh Token ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
// import axios from "axios";
// import ipconfig from "@/app/ipconfig";
// import Swal from "sweetalert2";

// // ‚úÖ URL API
// const REFRESH_API = `http://${ipconfig.API_HOST}/api/auth/refresh-access-token`;
// const LOGOUT_API = `http://${ipconfig.API_HOST}/api/auth/logout`;

// export async function logoutUser() {
//     let accessToken = sessionStorage.getItem("access_token");
//     const refreshToken = sessionStorage.getItem("refresh_token");
//     const userId = sessionStorage.getItem("user_id");

//     console.log("üîπ `user_id` ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Logout:", userId);
//     console.log("üîπ `access_token` ‡∏Å‡πà‡∏≠‡∏ô Logout:", accessToken);
//     console.log("üîπ `refresh_token` ‡∏Å‡πà‡∏≠‡∏ô Logout:", refreshToken);

//     try {
//         // ‚úÖ 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Access Token ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API `/auth/refresh-access-token`
//         console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Access Token...");

//         let newAccessToken = null; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Access Token ‡πÉ‡∏´‡∏°‡πà
//         const refreshResponse = await axios.post(REFRESH_API, {
//             user_id: userId,
//             access_token: accessToken
//         }, {
//             headers: {
//                 Authorization: `Bearer ${refreshToken}`,
//                 "Content-Type": "application/json"
//             }
//         });

//         console.log("üîÑ ‚úÖ Refresh Token Response:", refreshResponse.data);

//         // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà API ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
//         const isExpired = refreshResponse.data?.is_expired ? String(refreshResponse.data.is_expired) : "false";
//         const isRevoked = refreshResponse.data?.is_revoked ? !!refreshResponse.data.is_revoked : false;

//         sessionStorage.setItem("new_access_token", newAccessToken);
//         console.log("üîπ user_status:", refreshResponse.data.user_status);
//         console.log("üîπ is_expired (boolean):", isExpired);
//         console.log("üîπ is_revoked (boolean):", isRevoked);
//         console.log("üîπ new_access_token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", newAccessToken);

//         if (refreshResponse.data.user_status === "online" && isExpired === "false") {
//             console.log("‚úÖ Access Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‚Üí ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥ Logout");
//             accessToken = sessionStorage.getItem("access_token");
//         } else if (isExpired === "true" && isRevoked && newAccessToken) {
//             if (newAccessToken === refreshToken) {
//                 console.error("‚ùå new_access_token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô refresh_token ‡∏ã‡∏∂‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!");
//                 clearSession();
//                 return;
//             }
//             sessionStorage.setItem("access_token", newAccessToken);
//             console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï new_access_token ‡πÉ‡∏ô Local Storage:", newAccessToken);
//             accessToken = newAccessToken;
//         } else {
//             console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ Access Token ‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Login ‡πÉ‡∏´‡∏°‡πà");
//             clearSession();
//             await Swal.fire({
//                 title: "‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
//                 text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà",
//                 icon: "warning",
//                 confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//             });
//             return;
//         }

//         console.log("üöÄ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ Logout...");
//         console.log("üîπ `user_id` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:", userId);
//         console.log("üîπ `access_token` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:", accessToken);

//         try {
//             const logoutResponse = await axios.post(
//                 LOGOUT_API,
//                 { user_id: userId },
//                 {
//                     headers: {
//                         Authorization: `${accessToken}`,
//                         "Content-Type": "application/json"
//                     }
//                 }
//             );

//             console.log("‚úÖ Logout API Response:", logoutResponse.data);

//             // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á message
//             if (logoutResponse && logoutResponse.data) {
//                 console.log("üîπ Message from API:", logoutResponse.data.message);
//             } else {
//                 console.error("‚ùå logoutResponse ‡∏´‡∏£‡∏∑‡∏≠ logoutResponse.data ‡πÄ‡∏õ‡πá‡∏ô undefined!");
//             }

//             // ‚úÖ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå Local Storage
//             clearSession();

//             await Swal.fire({
//                 title: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
//                 icon: "success",
//                 toast: true,
//                 position: "top-end",
//                 showConfirmButton: false,
//                 timer: 2000,
//                 timerProgressBar: true,
//             });

//         } catch (logoutError) {
//             console.error("‚ùå Logout API Error:", logoutError);

//             // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ response ‡∏à‡∏≤‡∏Å error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
//             if (logoutError.response && logoutError.response.data) {
//                 console.error("üîπ Error Message:", logoutError.response.data.message);
//             } else {
//                 console.error("‚ùå logoutError.response ‡∏´‡∏£‡∏∑‡∏≠ logoutError.response.data ‡πÄ‡∏õ‡πá‡∏ô undefined!");
//             }

//             await Swal.fire({
//                 title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//                 text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
//                 icon: "error",
//                 confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//             });
//         }

//     } catch (error) {
//         console.error("‚ùå Error refreshing Access Token:", error);
//         await Swal.fire({
//             title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//             text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
//             icon: "error",
//             confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
//         });
//     }
// }

// // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Session ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
// function clearSession() {
//     console.log("üîπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå SessionStorage ‡πÅ‡∏•‡∏∞ Redirect...");

//     sessionStorage.clear(); // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

//     // ‚úÖ ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
//     setTimeout(() => {
//         window.location.href = "/";
//     }, 2000);
// }


// TEST LOGOUT
// ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Logout ‡πÅ‡∏•‡∏∞ Refresh Token ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
import axios from "axios";
import ipconfig from "@/app/ipconfig";
import Swal from "sweetalert2";

// ‚úÖ URL API
const REFRESH_API = `http://${ipconfig.API_HOST}/api/auth/refresh-access-token`;
const LOGOUT_API = `http://${ipconfig.API_HOST}/api/auth/logout`;

export async function logoutUser() {
    const accessToken = sessionStorage.getItem("access_token");
    const userId = sessionStorage.getItem("user_id");

    console.log("üîπ `user_id` ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Logout:", userId);
    console.log("üîπ `access_token` ‡∏Å‡πà‡∏≠‡∏ô Logout:", accessToken);

    if (!accessToken || !userId) {
        console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Access Token ‡∏´‡∏£‡∏∑‡∏≠ User ID ‚Üí ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login");
        clearSession();
        return;
    }

    console.log("üöÄ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ Logout...");
    
    try {
        const logoutResponse = await axios.post(
            LOGOUT_API,
            { user_id: userId },
            {
                headers: {
                    Authorization: `${accessToken}`,
                    "Content-Type": "application/json"
                }
            }
        );

        console.log("‚úÖ Logout API Response:", logoutResponse.data);

        clearSession();
        await Swal.fire({
            title: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
            icon: "success",
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true,
        });

    } catch (logoutError) {
        console.error("‚ùå Logout API Error:", logoutError);

        await Swal.fire({
            title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
            icon: "error",
            confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
        });
    }
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Session ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
function clearSession() {
    console.log("üîπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå SessionStorage ‡πÅ‡∏•‡∏∞ Redirect...");

    sessionStorage.clear(); // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    // ‚úÖ ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
    setTimeout(() => {
        window.location.href = "/";
    }, 2000);
}


