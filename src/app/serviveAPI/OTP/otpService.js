import axios from "axios";
import ipconfig from "@/app/ipconfig";

// ‚úÖ URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP
const API_URL = `https://${ipconfig.API_HOST}/api/auth/verify-otp-login`;

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö Token
export async function verifyOtp(userId, otp) {
    if (!userId || !otp) {
        throw new Error("‚ùå Missing user_id or otp.");
    }

    const otpData = { user_id: userId, otp: otp };

    try {
        const response = await axios.post(API_URL, otpData);

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Response
        const {
            access_token,
            refresh_token,
            access_expires_time,
            refresh_expires_time,
            message,
            roles,
            company_exist,
            company_id
        } = response.data;

        console.log("üìå API Response ‡∏à‡∏≤‡∏Å Verify OTP:", JSON.stringify(response.data, null, 2));

        // ‚úÖ ‡∏ñ‡πâ‡∏≤ `user_id` ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô Response ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ
        const finalUserId = response.data.user_id || userId;
        console.log("‚úÖ `user_id` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Local Storage:", finalUserId);

        // ‚úÖ ‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö Token ‡πÅ‡∏•‡∏∞ `user_id` ‡∏•‡∏á Local Storage
        sessionStorage.setItem("user_id", finalUserId);
        sessionStorage.setItem("access_token", access_token);
        sessionStorage.setItem("refresh_token", refresh_token);
        sessionStorage.setItem("access_expires_time", access_expires_time);
        sessionStorage.setItem("refresh_expires_time", refresh_expires_time);
        sessionStorage.setItem("roles", JSON.stringify(roles));

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö `company_exist` ‡πÅ‡∏•‡∏∞ `company_id` ‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        console.log("üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö company_exist:", company_exist);
        console.log("üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö company_id:", company_id);

        if (company_exist && company_id) {
            sessionStorage.setItem("company_id", company_id);
            console.log("‚úÖ Company ID saved:", company_id);
        } else {
            console.warn("üö® No valid Company ID found! Removing from sessionStorage.");
            sessionStorage.removeItem("company_id");
        }

        console.log("üîê Token & User ID saved successfully!");

        return {
            success: true,
            message,
            user_id: finalUserId,
            access_token,
            refresh_token,
            access_expires_time,
            refresh_expires_time,
            roles,
            company_exist,
            company_id
        };
    } catch (error) {
        // ‚ùå ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        const errorMessage = error.response?.data?.message || error.message || "Unknown error occurred";
        console.error("‚ùå OTP verification failed:", errorMessage);
        throw new Error(`OTP verification failed: ${errorMessage}`);
    }
}
